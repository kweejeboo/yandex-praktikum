variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

build-backend-code-job:
  stage: build
  
  script:
    - cd backend
    - mvn package "-Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository"
    
  artifacts:
    paths:
      - backend/target/sausage-store-0.0.1-SNAPSHOT.jar
      - ${CI_PROJECT_DIR}/.m2/ # сохранение зависимостей для SAST 

spotbugs-sast:
  stage: test
  needs:
    - build-backend-code-job
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 16
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository # не забудьте при сборке также указывать эту папку через аргумент -Dmaven.repo.local
  artifacts:
    reports:
      sast: gl-sast-report.json

sonarqube-backend-sast:
  stage: test
  
  needs:
    - build-backend-code-job
  image: maven:3.8-openjdk-16 # тот самый docker-образ, о котором мы все узнаем в будущем
  script:
    - cd backend
    - >
      mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_BACKEND_KEY}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN_BACKEND}
      -Dsonar.projectName=${SONAR_PROJECT_BACKEND_NAME}
      

upload-backend-release:
  stage: release
  
  needs:
    - build-backend-code-job
  script:
    - cd backend
    - mvn -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -s settings.xml -Dversion.application=${VERSION} -DskipTests deploy 
            
telegram-notification-backend:  
  stage: notify
  needs:
    - upload-backend-release
  script:
    - 'curl -X POST -H "Content-type: application/json" --data "{\"chat_id\": \"-1001860249898\", \"text\": \"Вышла новая версия бэкенда сосисочной - $VERSION. Скачать backend можно по ссылке — ${NEXUS_BACKEND_REPO_URL}/com/yandex/practicum/devops/sausage-store/${VERSION}/sausage-store-${VERSION}.jar\"}" https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage'
  
