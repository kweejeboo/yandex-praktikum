frontend:
  stage: module-pipelines
  trigger:
    include:
      - "/frontend/.gitlab-ci.yml"
    strategy: depend # depend нужен, если какой-нибудь дочерний пайплайн свалился, мы знали, что общий пайплайн тоже идёт с ошибкой
  only:
    changes: # как только происходит изменение в папке frontend, запускается дочерний пайплайн, который лежит в этой папке
      - frontend/**/*

build-frontend-code-job:
  stage: build
  script:
    - cd frontend
    - npm install
    - npm run build
  cache:
    paths:
    - .npm/ # для хранения зависимостей сборки фронтенда
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - frontend/dist/frontend
  only:
     changes:
     - frontend/*
     
sonar-scanner:
  stage: test
  needs:
    - build-frontend-code-job
  image:
    name: sonarsource/sonar-scanner-cli:latest
  script:
    - cd frontend
    - >
      sonar-scanner -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_FRONTEND_KEY}
      -Dsonar.sources=. 
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN_FRONTEND}

upload-frontend-release:
  stage: release
  needs:
    - build-frontend-code-job
    - sonar-scanner
  script:
    - cd frontend/dist
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_FRONTEND_REPO_URL}/${VERSION}/sausage-store-${VERSION}.tar.gz     

telegram-notification-frontend:
  stage: notify
  needs:
    - upload-frontend-release
  script:
    - 'curl -X POST -H "Content-type: application/json" --data "{\"chat_id\": \"-1001860249898\", \"text\": \"Вышла новая версия фронтенда сосисочной - $VERSION. Скачать фронтенд можно по ссылке — ${NEXUS_FRONTEND_REPO_URL}/${VERSION}/sausage-store-${VERSION}.tar.gz\"}" https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage'
