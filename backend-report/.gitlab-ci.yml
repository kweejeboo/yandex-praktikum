#cache:
#  paths:
#    - ${CI_PROJECT_DIR}/.m2/repository
variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
#  MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
  JAVA_OPTS: -XX:MaxRAMPercentage=90
include:
  - template: Security/SAST.gitlab-ci.yml
  - project: templates/ci
    file: DockerInDockerTemplate.yml
stages:
  - build
  - test
  - release
  - deploy

build-backend-report-job:
  stage: build
  image: docker:20.10.12-dind-rootless
  services:
    - docker:dind
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - echo "$DOCKERHUB_TOKEN" | docker login --username $DOCKERHUB_LOGIN --password-stdin
  script:
    - cd backend-report
    - >
      docker build --build-arg VERSION=$VERSION --tag
      $CI_REGISTRY_IMAGE/sausage-backend-report:$CI_COMMIT_SHA . 
    - docker push $CI_REGISTRY_IMAGE/sausage-backend-report:$CI_COMMIT_SHA

python_test_job:
  stage:
    - test
  image: python:3.11-alpine
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip
      - venv/
  before_script:
    - python3 -V
    - pip3 install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip3 install requests
    - pip3 install python-dotenv
  script:
    - python3 -m unittest

upload-backend-report-release:
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  services:
    - docker:dind
  stage: release
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/sausage-backend-report:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/sausage-backend-report:$CI_COMMIT_SHA
      $CI_REGISTRY_IMAGE/sausage-backend-report:latest
    - docker push $CI_REGISTRY_IMAGE/sausage-backend-report:latest
  needs:
    - sonarqube-backend-report-sast

deploy-backend-report:
  stage: deploy
  image: vault:1.11.3
  before_script:
    - apk add openssh-client bash
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=sausage-store jwt=$CI_JOB_JWT)"      
    - ssh ${DEV_USER}@${DEV_HOST}
      "export "VERSION=${VERSION}";
      export "SPRING_DATASOURCE_URL=$(vault kv get -field=spring.datasource.url secret/sausage-store)";
      export "SPRING_DATASOURCE_USERNAME=$(vault kv get -field=spring.datasource.username secret/sausage-store)";
      export "SPRING_DATASOURCE_PASSWORD=$(vault kv get -field=spring.datasource.password secret/sausage-store)";
      export "SPRING_DATA_MONGODB_URI=$(vault kv get -field=spring.data.mongodb.uri secret/sausage-store)";
      export "GITLAB_REGISTRY=${GITLAB_REGISTRY}";
      export "GITLAB_USER=${GITLAB_USER}";
      export "GITLAB_PASS=${GITLAB_PASS}";
      export "GIT_FOLDER=${GIT_FOLDER}";
      /bin/bash -s " < ./backend-report/backend-report-deploy.sh
